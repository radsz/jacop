/* Generated By:JJTree: Do not edit this line. ASTSolveExpr.java Version 4.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.jacop.fz;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public
class ASTSolveExpr extends SimpleNode { private static Logger logger = LoggerFactory.getLogger(ASTSolveExpr.class);
  public ASTSolveExpr(int id) {
    super(id);
  }

  public ASTSolveExpr(Parser p, int id) {
    super(p, id);
  }

    int type=-1;  // 0 - ident, 1 - array access
    int index;  // keeps index
    String ident;

    public void setType(int t) {
	type = t;
    }
    public int getType() {
	return type;
    }

    public void setIndex(int i) {
	index = i;
    }
    public int getIndex() {
	return index;
    }

    public void setIdent(String i) {
	ident = i;
    }
    public String getIdent() {
	return ident;
    }

    public String toString() {
	String val="";

	if (type != -1) {
	    switch (type) {
	    case 0: val = "(ident): " + ident; break;
	    case 1: val = "(array access): " + ident + "[" + index + "]";  break;
	    }
	}

	return super.toString() + val;
    }
}
/* JavaCC - OriginalChecksum=5931bb897b8f90fb6543ec7905a67886 (do not edit this line) */
